{"version":3,"sources":["logo.svg","Loading.jsx","Theme.jsx","Trending/Trending.jsx","Toprated/Toprated.jsx","Movies.jsx","logo.png","Trending/Trendd.jsx","Tvshows/Popular.jsx","Tvshows/Toprated.jsx","Tvshows/Populardetails.jsx","Tvshows/Viewallseason.jsx","Search/Multisearch.jsx","aboutus.jpg","About.jsx","Error.jsx","Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Loading","className","Themee","createContext","Theme","props","useState","theme","setTheme","useEffect","document","body","style","backgroundColor","color","Provider","value","children","Trending","trending","setTrending","useContext","check","setCheck","Movietrending","a","fetch","moviedata","json","moviedataa","data","results","map","curval","index","title","id","poster","poster_path","key","console","log","responsiveClass","nav","dots","autoplay","smartSpeed","autoplayHoverPause","responsive","0","items","400","600","700","1000","src","exact","to","pathname","state","Movies","movie","setMovie","Moviedata","overview","Trendd","setMoviedata","similar","showSimilar","history","useHistory","useLocation","url","dataa","window","scrollTo","alert","push","Similarmovie","alt","release_date","status","vote_average","length","Popular","populartv","setPopulartv","loading","setLoading","Tvpopular","tvshow","tvid","name","original_name","Toprated","Tvrated","Populartvdetail","populartvdetail","setPopulartvdetail","setSimilar","Populardetail","detail","Similartvshows","tagline","number_of_seasons","number_of_episodes","first_air_date","Seasons","location","season","setSeason","Tvseason","tvseason","seasons","episodes","episode_count","date","air_date","Multisearch","tvShow","settvShow","movies","setMovies","similarr","setSimilarr","mediaType","media","Tvshow","Movie","About","Aboutt","Error","Home","React","search","setSearch","searchMovie","setsearchMovie","setDate","show","setShow","searchdata","searchdataa","media_type","Searchh","addEventListener","scrollY","n","Date","getFullYear","Datee","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","NavDropdown","Divider","onClick","onChange","e","searchh","target","type","placeholder","aria-label","scroll","top","left","behavior","transition","path","component","Populartv","Topratedtv","Logo","width","height","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.03cb6fc4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nlet Loading = () => {\r\n    return (\r\n        <>\r\n            <div className=\"container\"> <p>Loading...</p></div>\r\n        </>\r\n    )\r\n}\r\nexport default Loading;","import React, { useState, createContext, useEffect } from 'react';\r\nexport const Themee = createContext();\r\nlet Theme = (props) => {\r\n    let [theme, setTheme] = useState(true);\r\n    //console.log(theme);\r\n    let Test = () => {\r\n        if (theme) {\r\n            document.body.style.backgroundColor = 'black';\r\n            document.body.style.color = 'white';\r\n            //setTheme(theme);\r\n        }\r\n        else {\r\n            document.body.style.backgroundColor = 'white';\r\n            document.body.style.color = 'black';\r\n            //setTheme(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        Test();\r\n    })\r\n    return (\r\n        <>\r\n            <Themee.Provider value={[theme, setTheme]}>\r\n                {props.children}\r\n            </Themee.Provider>\r\n        </>\r\n    )\r\n}\r\nexport default Theme;","import React, { useState, useEffect, useContext } from 'react';\r\nimport Loading from '../Loading';\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport { Themee } from '../Theme';\r\nimport { Link } from \"react-router-dom\";\r\nlet Trending = () => {\r\n    let [trending, setTrending] = useState([]);\r\n    let [theme, setTheme] = useContext(Themee);\r\n    let [check, setCheck] = useState(true);\r\n    let Movietrending = async () => {\r\n        try {\r\n            let movieurl = \"https://api.themoviedb.org/3/trending/all/day?api_key=32c2f8b05f0301b51959c90b965a06ba\";\r\n            let moviedata = await fetch(movieurl);\r\n            let moviedataa = await moviedata.json();\r\n            //console.log(moviedataa.results);\r\n            let data = moviedataa.results.map((curval, index) => ({\r\n                title: curval.title,\r\n                value: curval.id,\r\n                poster: curval.poster_path,\r\n                key: index\r\n            }));\r\n            setTrending(data);\r\n            setCheck(false);\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        Movietrending();\r\n    }, []);\r\n    const options = {\r\n        responsiveClass: true,\r\n        nav: true,\r\n        dots: true,\r\n        autoplay: true,\r\n        smartSpeed: 1000,\r\n        autoplayHoverPause: true,\r\n        responsive: {\r\n            0: {\r\n                items: 2,\r\n            },\r\n            400: {\r\n                items: 2,\r\n            },\r\n            600: {\r\n                items: 2,\r\n            },\r\n            700: {\r\n                items: 3,\r\n            },\r\n            1000: {\r\n                items: 5,\r\n\r\n            }\r\n        },\r\n    };\r\n    if (check) {\r\n        return <Loading />\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h3 className=\"mb-3\">Trending Movies</h3>\r\n                <OwlCarousel className='owl-theme'{...options}>\r\n                    {trending.map((curval) => {\r\n                        return (\r\n                            <>\r\n                                <div className={theme ? `card border-0 popular ml-3 theme` : ` card border-0 popular ml-3 themee`} key={curval.value}>\r\n                                    <img className=\"img-fluid\" src={`https://image.tmdb.org/t/p/original/${curval.poster}`} />\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title mb-2\">{curval.title}</h5><span></span>\r\n                                        <Link exact to={{ pathname: `${curval.title}/${curval.value}`, state: curval.value }}><button className={`btn ${theme ? 'btn-outline-light' : 'btn-outline-info'}`}>View Detail</button></Link>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    })}\r\n                </OwlCarousel>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Trending;","import React, { useState, useEffect, useContext } from 'react';\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport Loading from '../Loading';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Themee } from '../Theme';\r\nlet Movies = () => {\r\n    let [movie, setMovie] = useState([]);\r\n    let [check, setCheck] = useState(true);\r\n    let [theme, setTheme] = useContext(Themee);\r\n    console.log(theme ? 'black' : 'white')\r\n    let Moviedata = async () => {\r\n        try {\r\n            let movieurl = \"https://api.themoviedb.org/3/movie/top_rated?api_key=32c2f8b05f0301b51959c90b965a06ba&language=en-US&page=1\";\r\n            let moviedata = await fetch(movieurl);\r\n            let moviedataa = await moviedata.json();\r\n            //console.log(moviedataa.results);\r\n            let data = moviedataa.results.map((curval, index) => ({\r\n                title: curval.title,\r\n                value: curval.id,\r\n                poster: curval.poster_path,\r\n                key: index\r\n            }));\r\n            setMovie(data);\r\n            setCheck(false);\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    const options = {\r\n        responsiveClass: true,\r\n        nav: true,\r\n        dots: true,\r\n        autoplay: true,\r\n        smartSpeed: 1000,\r\n        autoplayHoverPause: true,\r\n        responsive: {\r\n            0: {\r\n                items: 2,\r\n            },\r\n            400: {\r\n                items: 2,\r\n            },\r\n            600: {\r\n                items: 2,\r\n            },\r\n            700: {\r\n                items: 3,\r\n            },\r\n            1000: {\r\n                items: 5,\r\n\r\n            }\r\n        },\r\n    };\r\n    useEffect(() => {\r\n        Moviedata();\r\n    }, [])\r\n    if (check) {\r\n        return <Loading />\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h3 className=\"mb-3\">Top Rated Movies</h3>\r\n                <OwlCarousel className='owl-theme'{...options}>\r\n                    {movie.map((curval, index) => {\r\n                        return (\r\n                            <>\r\n                                <div className={theme ? `card border-0 popular ml-3 theme` : ` card border-0 popular ml-3 themee`} key={curval.value}>\r\n                                    <img className=\"img-fluid\" src={`https://image.tmdb.org/t/p/original/${curval.poster}`} />\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title mb-2\">{curval.title}</h5><span></span>\r\n                                        <Link exact to={{ pathname: `${curval.title}/${curval.value}`, state: curval.value }}><button className={`btn ${theme ? 'btn-outline-light' : 'btn-outline-info'}`}>View Detail</button></Link>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    })}\r\n                </OwlCarousel>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Movies;","import React, { useState, useEffect, useContext } from 'react';\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport Loading from './Loading';\r\nimport { Link } from \"react-router-dom\";\r\nimport Trending from './Trending/Trending';\r\nimport Toprated from './Toprated/Toprated';\r\nimport { Themee } from './Theme';\r\nlet Movies = () => {\r\n    let [movie, setMovie] = useState([]);\r\n    let [check, setCheck] = useState(true);\r\n    let [theme, setTheme] = useContext(Themee);\r\n    // console.log(theme ? 'fk' : 'nofk');\r\n    let Moviedata = async () => {\r\n        try {\r\n            let movieurl = \"https://api.themoviedb.org/3/movie/popular?api_key=32c2f8b05f0301b51959c90b965a06ba\";\r\n            let moviedata = await fetch(movieurl);\r\n            let moviedataa = await moviedata.json();\r\n            // console.log(moviedata);\r\n            // console.log(moviedataa.results);\r\n            let data = moviedataa.results.map((curval, index) => ({\r\n                title: curval.title,\r\n                value: curval.id,\r\n                overview: curval.overview,\r\n                poster: curval.poster_path,\r\n                key: index\r\n            }));\r\n            setMovie(data);\r\n            setCheck(false);\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    const options = {\r\n        responsiveClass: true,\r\n        nav: true,\r\n        dots: true,\r\n        autoplay: true,\r\n        smartSpeed: 1000,\r\n        autoplayHoverPause: true,\r\n        responsive: {\r\n            0: {\r\n                items: 2,\r\n            },\r\n            400: {\r\n                items: 2,\r\n            },\r\n            600: {\r\n                items: 2,\r\n            },\r\n            700: {\r\n                items: 3,\r\n            },\r\n            1000: {\r\n                items: 5,\r\n\r\n            }\r\n        },\r\n    };\r\n    useEffect(() => {\r\n        Moviedata();\r\n    }, [])\r\n    if (check) {\r\n        return <Loading />\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h3 className=\"mb-3\">Popular Movies</h3>\r\n                <OwlCarousel className='owl-theme'{...options}>\r\n                    {movie.map((curval, index) => {\r\n                        return (\r\n                            <>\r\n                                <div className={theme ? `card border-0 popular ml-3 theme` : ` card border-0 popular ml-3 themee`} key={curval.value}>\r\n                                    <img className=\"img-fluid\" src={`https://image.tmdb.org/t/p/original/${curval.poster}`} />\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title mb-2\">{curval.title}</h5><span></span>\r\n                                        <Link exact to={{ pathname: `${curval.title}/${curval.value}`, state: curval.value }}><button className={`btn ${theme ? 'btn-outline-light' : 'btn-outline-info'}`}>View Detail</button></Link>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    })}\r\n                </OwlCarousel>\r\n            </div>\r\n            <Trending />\r\n            <Toprated />\r\n        </>\r\n    )\r\n}\r\nexport default Movies;\r\n","export default __webpack_public_path__ + \"static/media/logo.dee18f54.png\";","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport Loading from '../Loading';\r\nimport { Themee } from '../Theme';\r\nlet Trendd = () => {\r\n    let [check, setCheck] = useState(true);\r\n    let [moviedata, setMoviedata] = useState({});\r\n    let [similar, showSimilar] = useState([]);\r\n    let history = useHistory();\r\n    let [theme, setTheme] = useContext(Themee);\r\n    const location = useLocation();\r\n    let id = location.state;\r\n    let Moviedata = async () => {\r\n        try {\r\n            let url = `https://api.themoviedb.org/3/movie/${id}?api_key=32c2f8b05f0301b51959c90b965a06ba`;\r\n            let moviedata = await fetch(url);\r\n            let dataa = await moviedata.json();\r\n            setMoviedata(dataa);\r\n            //console.log(dataa);\r\n            setCheck(false);\r\n            window.scrollTo(0, 0);\r\n        }\r\n        catch (err) {\r\n            alert(`Something Wrong!!! Refresh`)\r\n            history.push('/');\r\n        }\r\n    }\r\n    let Similarmovie = async () => {\r\n        try {\r\n            //console.log(id);\r\n            let url = `https://api.themoviedb.org/3/movie/${id}/similar?api_key=32c2f8b05f0301b51959c90b965a06ba&language=en-US&page=1}`\r\n            let moviedata = await fetch(url);\r\n            let dataa = await moviedata.json();\r\n            //console.log(dataa.results);\r\n            let data = dataa.results.map((curval, index) => ({\r\n                title: curval.title,\r\n                value: curval.id,\r\n                poster: curval.poster_path\r\n            }));\r\n            showSimilar(data);\r\n            setCheck(false);\r\n        }\r\n        catch (err) {\r\n            //console.log(err)\r\n            alert(`Page Not Found!!! Refresh it ^_^`)\r\n            history.push('/');\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        Moviedata();\r\n    }, [id]);\r\n    useEffect(() => {\r\n        Similarmovie();\r\n    }, [id]);\r\n    if (check) {\r\n        return <Loading />\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                {id ? (\r\n                    <>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6 col-lg-6 col-12\">\r\n                                <img className=\"imgg\" alt=\"movieimage\" src={`https://image.tmdb.org/t/p/original/${moviedata.poster_path}`} />\r\n                            </div>\r\n                            <div className=\"col-md-6 col-lg-6 col-12\">\r\n                                <h3>Movie Title: <span>{moviedata.title}</span></h3>\r\n                                <p id=\"s3\"><span className=\"overview\">Overview: </span>{moviedata.overview}</p>\r\n                                <p><span className=\"vote\">Release Date: </span>{moviedata.release_date}</p>\r\n                                <p><span className=\"vote\">Status: </span>{moviedata.status}</p>\r\n                                <p><span className=\"vote\">Vote: </span>{moviedata.vote_average}</p>\r\n                            </div>\r\n                        </div>\r\n                        <h3 className=\"mb-3\">Similar Movies</h3>\r\n                        <div className=\"row\">\r\n                            {\r\n                                similar.length === 0 ? (<p className=\"ml-3\">Similar Movies not available!!!</p>) :\r\n                                    similar.map((curval) => {\r\n                                        return (\r\n                                            <>\r\n                                                <div className=\"col-lg-3 col-md-3 col-6\">\r\n                                                    <div className={theme ? `card border-0 popular ml-3 theme` : `card border-0 popular ml-3 themee`} key={curval.value}>\r\n                                                        <img className=\"img-fluid\" src={`https://image.tmdb.org/t/p/original/${curval.poster}`} />\r\n                                                        <div className=\"card-body\">\r\n                                                            <h5 className=\"card-title mb-2\">{curval.title}</h5><span></span>\r\n                                                            <Link exact to={{ pathname: `/${curval.title}/${curval.value}`, state: curval.value }}><button className={`btn ${theme ? 'btn-outline-light' : 'btn-outline-info'}`}>View Detail</button></Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </>\r\n                                        )\r\n                                    })}\r\n                        </div>\r\n                    </>) : (<p>Page Not Found!!!</p>)}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Trendd;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Loading from '../Loading';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Themee } from '../Theme';\r\nlet Popular = () => {\r\n    let [populartv, setPopulartv] = useState([]);\r\n    let [loading, setLoading] = useState(true);\r\n    let [theme, setTheme] = useContext(Themee);\r\n    let Tvpopular = async () => {\r\n        try {\r\n            let url = \"https://api.themoviedb.org/3/tv/popular?api_key=32c2f8b05f0301b51959c90b965a06ba&language=en-US&page=1\";\r\n            let tvshow = await fetch(url);\r\n            let dataa = await tvshow.json();\r\n            let data = dataa.results.map((curval) => ({\r\n                tvid: curval.id,\r\n                name: curval.original_name,\r\n                poster: curval.poster_path\r\n            }));\r\n            setLoading(false);\r\n            //console.log(data);\r\n            setPopulartv(data);\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        Tvpopular();\r\n    }, []);\r\n    if (loading) {\r\n        return <Loading />\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h3 className=\"mb-3\">Popular Tv Shows</h3>\r\n                <div className=\"row\">\r\n                    {populartv.map((curval) => {\r\n                        return (\r\n                            <>\r\n                                <div className=\"col-md-3 col-lg-3 col-6\">\r\n                                    <div className={theme ? `card border-0 popular ml-3 theme` : `card border-0 popular ml-3 themee`} key={curval.tvid}>\r\n                                        <img className=\"img-fluid\" src={`https://image.tmdb.org/t/p/original/${curval.poster}`} />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title mb-2\">{curval.name}</h5><span></span>\r\n                                            <Link exact to={{ pathname: `${curval.name}/${curval.tvid}/TvShows`, state: curval.tvid }}><button className={`btn ${theme ? 'btn-outline-light' : 'btn-outline-info'}`}>View Detail</button></Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Popular;","import React, { useState, useEffect, useContext } from 'react';\r\nimport Loading from '../Loading';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Themee } from '../Theme';\r\nlet Toprated = () => {\r\n    let [populartv, setPopulartv] = useState([]);\r\n    let [loading, setLoading] = useState(true);\r\n    let [theme, setTheme] = useContext(Themee);\r\n    let Tvrated = async () => {\r\n        try {\r\n            let url = \"https://api.themoviedb.org/3/tv/top_rated?api_key=32c2f8b05f0301b51959c90b965a06ba&language=en-US&page=1\";\r\n            let tvshow = await fetch(url);\r\n            let dataa = await tvshow.json();\r\n            let data = dataa.results.map((curval) => ({\r\n                tvid: curval.id,\r\n                name: curval.original_name,\r\n                poster: curval.poster_path\r\n            }));\r\n            setLoading(false);\r\n            //console.log(data);\r\n            setPopulartv(data);\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        Tvrated();\r\n    }, []);\r\n    if (loading) {\r\n        return <Loading />\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h3 className=\"mb-3\">Top Rated Tv Shows</h3>\r\n                <div className=\"row\">\r\n                    {populartv.map((curval) => {\r\n                        return (\r\n                            <>\r\n                                <div className=\"col-md-3 col-lg-3 col-6\">\r\n                                    <div className={theme ? `card border-0 popular ml-3 theme` : `card border-0 popular ml-3 themee`} key={curval.tvid}>\r\n                                        <img className=\"img-fluid\" src={`https://image.tmdb.org/t/p/original/${curval.poster}`} />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title mb-2\">{curval.name}</h5><span></span>\r\n                                            <Link exact to={{ pathname: `${curval.name}/${curval.tvid}/TvShows`, state: curval.tvid }}><button className={`btn ${theme ? 'btn-outline-light' : 'btn-outline-info'}`}>View Detail</button></Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Toprated;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport Loading from '../Loading';\r\nimport { Themee } from '../Theme';\r\nlet Populartvdetail = () => {\r\n    let [populartvdetail, setPopulartvdetail] = useState({});\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    let id = location.state;\r\n    let [loading, setLoading] = useState(true);\r\n    let [similar, setSimilar] = useState([]);\r\n    let [theme, setTheme] = useContext(Themee);\r\n    let Populardetail = async () => {\r\n        try {\r\n            let url = `https://api.themoviedb.org/3/tv/${id}?api_key=32c2f8b05f0301b51959c90b965a06ba&language=en-US}`;\r\n            let detail = await fetch(url);\r\n            let dataa = await detail.json();\r\n            //console.log(dataa);\r\n            setPopulartvdetail(dataa);\r\n            setLoading(false);\r\n        }\r\n        catch (err) {\r\n            if (err) throw err;\r\n            alert(`Many Traffic!!! Refresh it ^_^`)\r\n            history.push('/');\r\n        }\r\n    }\r\n    let Similartvshows = async () => {\r\n        try {\r\n            if (id) {\r\n                let url = `https://api.themoviedb.org/3/tv/${id}/similar?api_key=32c2f8b05f0301b51959c90b965a06ba&language=en-US&page=1}`;\r\n                let similar = await fetch(url);\r\n                let dataa = await similar.json();\r\n                let data = dataa.results.map((curval) => ({\r\n                    tvid: curval.id,\r\n                    name: curval.original_name,\r\n                    poster: curval.poster_path\r\n                }));\r\n                setSimilar(data);\r\n                window.scrollTo(0, 0);\r\n            }\r\n            else {\r\n                alert('Something Wrong!!! Page Not Found');\r\n            }\r\n        }\r\n        catch (err) {\r\n            if (err) throw err;\r\n            alert(`Many Traffic!!! Refresh it ^_^`)\r\n            history.push('/');\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        Populardetail();\r\n        Similartvshows();\r\n    }, [id]);\r\n    if (loading) {\r\n        return <Loading />\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                {id ? (\r\n                    <>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6 col-lg-6 col-12\">\r\n                                <img className=\"imgg\" alt=\"movieimage\" src={`https://image.tmdb.org/t/p/original/${populartvdetail.poster_path}`} />\r\n                            </div>\r\n                            <div className=\"col-md-6 col-lg-6 col-12\">\r\n                                <h3>TV Show Title:</h3>\r\n                                <h5>{populartvdetail.name}</h5><span>Tagline: {populartvdetail.tagline}</span>\r\n                                <p><span className=\"overview\">Total Number of Season: </span>{populartvdetail.number_of_seasons} || <span>Total Number of Episodes:</span>{populartvdetail.number_of_episodes}</p>\r\n                                <p id=\"s3\"><span className=\"overview\">Overview: </span>{populartvdetail.overview}</p>\r\n                                <p><span className=\"vote\">Release Date: </span>{populartvdetail.first_air_date}</p>\r\n                                <p><span className=\"vote\">Status: </span>{populartvdetail.status}</p>\r\n                                <p><span className=\"vote\">Vote: </span>{populartvdetail.vote_average}</p>\r\n                                <Link to={{ pathname: `/TvShows/${populartvdetail.name}/${populartvdetail.id}/seasons`, state: populartvdetail.id }}>View all seasons</Link>\r\n                            </div>\r\n                        </div>\r\n                        <h3 className=\"mb-3 mt-3\">Similar TV Shows</h3>\r\n                        <div className=\"row\">\r\n                            {similar.length === 0 ? (<p className=\"ml-3\">Similar TvShows not available!!!</p>) :\r\n                                similar.map((curval) => {\r\n                                    return (\r\n                                        <>\r\n                                            <div className=\"col-md-3 col-lg-3 col-6\">\r\n                                                <div className={theme ? `card border-0 popular ml-3 theme` : `card border-0 popular ml-3 themee`} key={curval.tvid}>\r\n                                                    <img className=\"img-fluid\" src={`https://image.tmdb.org/t/p/original/${curval.poster}`} />\r\n                                                    <div className=\"card-body\">\r\n                                                        <h5 className=\"card-title mb-2\">{curval.name}</h5><span></span>\r\n                                                        <Link exact to={{ pathname: `/${curval.name}/${curval.tvid}/TvShows`, state: curval.tvid }}><button className={`btn ${theme ? 'btn-outline-light' : 'btn-outline-info'}`}>View Detail</button></Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </>\r\n                                    )\r\n                                })}\r\n                        </div>\r\n                    </>\r\n                ) : (<p>Page Not Found</p>)}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Populartvdetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport Loading from '../Loading';\r\nlet Seasons = () => {\r\n    let location = useLocation();\r\n    let [season, setSeason] = useState([]);\r\n    let [loading, setLoading] = useState(true);\r\n    let history = useHistory();\r\n    let id = location.state;\r\n    let Tvseason = async () => {\r\n        try {\r\n            let url = `https://api.themoviedb.org/3/tv/${id}?api_key=32c2f8b05f0301b51959c90b965a06ba&language=en-US}`\r\n            let tvseason = await fetch(url);\r\n            let dataa = await tvseason.json();\r\n            let data = dataa.seasons.map((curval) => ({\r\n                season: curval.name,\r\n                episodes: curval.episode_count,\r\n                date: curval.air_date,\r\n                overview: curval.overview,\r\n                poster: curval.poster_path\r\n            }));\r\n            setSeason(data);\r\n            setLoading(false);\r\n            // console.log(dataa.seasons);\r\n            // console.log(data);\r\n        }\r\n        catch (err) {\r\n            alert('Page Not Found!!!');\r\n            history.push('/');\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        Tvseason();\r\n    })\r\n    if (loading) {\r\n        return (<Loading />)\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {id ? season.map((curval) => {\r\n                        return (\r\n                            <>\r\n                                <div className=\"col-lg-4 col-md-4 col-4 mb-5\">\r\n                                    <img alt=\"movieimage\" className=\"img-fluid\" src={`https://image.tmdb.org/t/p/original/${curval.poster}`} />\r\n                                </div>\r\n                                <div className=\"col-lg-8 col-md-8 col-8 mb-5\">\r\n                                    <h5 id=\"s1\">Season: {curval.season} <span>({curval.date})</span></h5>\r\n                                    <h6 id=\"s2\">Number of Episodes: <span>{curval.episodes}</span></h6>\r\n                                    <p id=\"s3\"><span className=\"text-uppercase font-weight-bold\">Overview:</span> {curval.overview === \"\" ? `No overview!!!:(` : curval.overview}</p>\r\n                                </div>\r\n                                <hr className=\"text-white\" />\r\n                            </>\r\n                        )\r\n                    }) : (<p>Page Not Found!!!</p>)}\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Seasons;","import React, { useState, useEffect,useContext } from 'react';\r\nimport { useLocation, useHistory, Link } from \"react-router-dom\";\r\nimport Loading from '../Loading';\r\nimport {Themee} from '../Theme'\r\nlet Multisearch = () => {\r\n    let location = useLocation();\r\n    let history = useHistory();\r\n    let [tvShow, settvShow] = useState({});\r\n    let [movies, setMovies] = useState({});\r\n    let [similar, showSimilar] = useState([]);\r\n    let [similarr, setSimilarr] = useState([]);\r\n    let [check, setCheck] = useState(true);\r\n    let [theme,setTheme] = useContext(Themee);\r\n    let id = location.state.id;\r\n    // location.state.id === 'undefined' ? history.push('/') : id = location.state.id;\r\n    let mediaType = location.state.media;\r\n    useEffect(() => {\r\n        if(mediaType==='person'){\r\n            alert('Data Not Exist!!!');\r\n            history.push('/');\r\n        }\r\n        if (mediaType === 'tv') {\r\n            let Tvshow = async () => {\r\n                try {\r\n                    let url = `https://api.themoviedb.org/3/tv/${id}?api_key=32c2f8b05f0301b51959c90b965a06ba&language=en-US}`;\r\n                    let detail = await fetch(url);\r\n                    let dataa = await detail.json();\r\n                    settvShow(dataa);\r\n                    setCheck(false);\r\n                    //console.log(dataa);\r\n                }\r\n                catch (err) {\r\n                    alert('Something Wrong!!! Refresh it:)');\r\n                    history.push('/');\r\n                    console.log(err);\r\n                }\r\n            }\r\n            let Similartvshows = async () => {\r\n                try {\r\n                    if (id) {\r\n                        let url = `https://api.themoviedb.org/3/tv/${id}/similar?api_key=32c2f8b05f0301b51959c90b965a06ba&language=en-US&page=1}`;\r\n                        let similar = await fetch(url);\r\n                        let dataa = await similar.json();\r\n                        let data = dataa.results.map((curval) => ({\r\n                            tvid: curval.id,\r\n                            name: curval.original_name,\r\n                            poster: curval.poster_path\r\n                        }));\r\n                        setSimilarr(data);\r\n                        window.scrollTo(0, 0);\r\n                    }\r\n                    else {\r\n                        alert('Something Wrong!!! Page Not Found');\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    if (err) throw err;\r\n                    alert(`Many Traffic!!! Refresh it ^_^`)\r\n                    history.push('/');\r\n                }\r\n            }\r\n            Tvshow();\r\n            Similartvshows();\r\n            return;\r\n        }\r\n        if (mediaType === 'movie') {\r\n            let Movie = async () => {\r\n                try {\r\n                    let url = `https://api.themoviedb.org/3/movie/${id}?api_key=32c2f8b05f0301b51959c90b965a06ba`;\r\n                    let moviedata = await fetch(url);\r\n                    let dataa = await moviedata.json();\r\n                    setMovies(dataa);\r\n                    setCheck(false);\r\n                    //console.log(dataa);\r\n                }\r\n                catch (err) {\r\n                    alert('Something Wrong!!! Refresh it:)');\r\n                    history.push('/');\r\n                    console.log(err);\r\n                }\r\n            }\r\n            let Similarmovie = async () => {\r\n                try {\r\n                    //console.log(id);\r\n                    let url = `https://api.themoviedb.org/3/movie/${id}/similar?api_key=32c2f8b05f0301b51959c90b965a06ba&language=en-US&page=1}`\r\n                    let moviedata = await fetch(url);\r\n                    let dataa = await moviedata.json();\r\n                    //console.log(dataa.results);\r\n                    let data = dataa.results.map((curval, index) => ({\r\n                        title: curval.title,\r\n                        value: curval.id,\r\n                        poster: curval.poster_path\r\n                    }));\r\n                    showSimilar(data);\r\n                    setCheck(false);\r\n                }\r\n                catch (err) {\r\n                    console.log(err)\r\n                    alert(`Page Not Found!!! Refresh it ^_^`)\r\n                    history.push('/');\r\n                }\r\n            }\r\n            Movie();\r\n            Similarmovie();\r\n            return;\r\n        }\r\n    }, [id]);\r\n    if (check) {\r\n        return (<Loading />)\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                {mediaType === 'movie' ? (\r\n                    <>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 col-lg-6 col-12\">\r\n                            <img className=\"imgg\" alt=\"movieimage\" src={`https://image.tmdb.org/t/p/original/${movies.poster_path}`} />\r\n                        </div>\r\n                        <div className=\"col-md-3 col-lg-3 col-12\">\r\n                            <h3>Movie Title: <span>{movies.title}</span></h3>\r\n                            <p id=\"s3\"><span className=\"overview\">Overview: </span>{movies.overview}</p>\r\n                            <p><span className=\"vote\">Release Date: </span>{movies.release_date}</p>\r\n                            <p><span className=\"vote\">Status: </span>{movies.status}</p>\r\n                            <p><span className=\"vote\">Vote: </span>{movies.vote_average}</p>\r\n                        </div>\r\n                    </div>\r\n                    <h3 className=\"mb-3\">Similar Movies</h3>\r\n                <div className=\"row\">\r\n                    {\r\n                        similar.length===0?(<p className=\"ml-3\">Similar Movies doesn't exists!!!</p>):\r\n                        similar.map((curval) => {\r\n                        return (\r\n                            <>\r\n                                <div className=\"col-lg-3 col-md-3 col-6\">\r\n                                    <div className={theme ? `card border-0 popular ml-3 theme` : `card border-0 popular ml-3 themee`}  key={curval.value}>\r\n                                        <img className=\"img-fluid\" src={`https://image.tmdb.org/t/p/original/${curval.poster}`} />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"mb-2\">{curval.title}</h5>\r\n                                            <Link exact to={{ pathname: `/${curval.title}/${curval.value}`, state: curval.value }}><button  className={`btn ${theme ? 'btn-outline-light' : 'btn-outline-info'}`}>View Detail</button></Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    })}\r\n                </div>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 col-lg-6 col-12\">\r\n                            <img className=\"imgg\" alt=\"movieimage\" src={`https://image.tmdb.org/t/p/original/${tvShow.poster_path}`} />\r\n                        </div>\r\n                        <div className=\"col-md-6 col-lg-6 col-12\">\r\n                            <h3>TV Show Title:</h3>\r\n                            <h5>{tvShow.name}</h5><span>Tagline: {tvShow.tagline}</span>\r\n                            <p><span className=\"overview\">Total Number of Season: </span>{tvShow.number_of_seasons} || <span>Total Number of Episodes:</span>{tvShow.number_of_episodes}</p>\r\n                            <p id=\"s3\"><span className=\"overview\">Overview: </span>{tvShow.overview}</p>\r\n                            <p><span className=\"vote\">Release Date: </span>{tvShow.first_air_date}</p>\r\n                            <p><span className=\"vote\">Status: </span>{tvShow.status}</p>\r\n                            <p><span className=\"vote\">Vote: </span>{tvShow.vote_average}</p>\r\n                            <Link to={{ pathname: `/TvShows/${tvShow.name}/${tvShow.id}/seasons`, state: tvShow.id }}>View all seasons</Link>\r\n                        </div>\r\n                    </div>\r\n                    <h3 className=\"mb-3\">Similar TV Shows</h3>\r\n                        <div className=\"row\">\r\n                            {similarr.length === 0 ? (<p className=\"ml-3\">Similar TvShows doesnot exists!!!</p>) :\r\n                                similarr.map((curval) => {\r\n                                    return (\r\n                                        <>\r\n                                            <div className=\"col-md-4 col-lg-4 col-6\">\r\n                                                <div className={theme ? `card border-0 popular ml-3 theme` : `card border-0 popular ml-3 themee`} key={curval.tvid}>\r\n                                                    <img className=\"img-fluid\" src={`https://image.tmdb.org/t/p/original/${curval.poster}`} />\r\n                                                    <div className=\"card-body\">\r\n                                                        <h5 className=\"card-title mb-2\">{curval.name}</h5><span></span>\r\n                                                        <Link exact to={{ pathname: `/${curval.name}/${curval.tvid}/TvShows`, state: curval.tvid }}><button  className={`btn ${theme ? 'btn-outline-light' : 'btn-outline-info'}`}>View Detail</button></Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </>\r\n                                    )\r\n                                })}\r\n                        </div>\r\n                        </>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Multisearch;\r\n","export default __webpack_public_path__ + \"static/media/aboutus.966f5680.jpg\";","import React from 'react';\r\nimport Aboutt from './aboutus.jpg';\r\nlet About = () => {\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h2>About Us</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 col-md-6 col-12 order-md-0 order-1\">\r\n                        <h5 className=\"text-center\">Let's Explore millions of movies and tvshows.</h5>\r\n                        <hr className=\"new w-25 mx-auto\" />\r\n                        <h4>Who are we?</h4>\r\n                        <p id=\"about\">This is an Media Web Application. In this website, users can find millions of Movies and TvShows details like Overview, Vote, Seasons, Status, Release Date, and Episodes. Moreover, User can filter the Movies and TvShows by Input Field respectively.</p>\r\n                        <p id=\"about\">We Uploads and Updates daily Popular, Trending, Toprated Movies and TvShows.</p>\r\n                    </div>\r\n                    <div className=\"col-lg-6 col-md-6 col-12 order-md-1 order-0\">\r\n                        <img className=\"img-fluid mb-3\" src={Aboutt} alt=\"about\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default About;","import React from 'react';\r\nlet Error = () => {\r\n    return (\r\n        <>\r\n            <div className=\"container text-center\">\r\n                <h2>Error 404!!!</h2>\r\n                <p>Page Not Found:(</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Error;","import React from 'react';\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport Movies from './Movies';\r\nimport Logo from './logo.png';\r\n// import Modal from './popularmovie/Movieid';\r\nimport Trendd from './Trending/Trendd'\r\n// import Search from './Search/Search';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport Populartv from './Tvshows/Popular';\r\nimport Topratedtv from './Tvshows/Toprated';\r\nimport Populartvdetail from './Tvshows/Populardetails';\r\nimport Seasons from './Tvshows/Viewallseason';\r\nimport Multisearch from './Search/Multisearch';\r\nimport About from './About';\r\nimport Error from './Error';\r\nimport Loading from './Loading';\r\nimport { IoIosArrowDropup } from \"react-icons/io\";\r\nimport { Themee } from './Theme';\r\nlet Home = () => {\r\n  let [search, setSearch] = React.useState(\"\");\r\n  let [searchMovie, setsearchMovie] = React.useState([]);\r\n  let [check, setCheck] = React.useState(true);\r\n  let [date, setDate] = React.useState(\"\");\r\n  let [loading, setLoading] = React.useState(true);\r\n  let [theme, setTheme] = React.useContext(Themee);\r\n  let [show, setShow] = React.useState(true);\r\n  //let [show, setShow] = React.useState(false);\r\n  let history = useHistory();\r\n  // let [nav, setNav] = React.useState(true);\r\n  // let Scroll = () => {\r\n  //   if (window.scrollY >= 250) {\r\n  //     setNav(false)\r\n  //   }\r\n  //   else {\r\n  //     setNav(true);\r\n  //   }\r\n  // }\r\n  // window.addEventListener('scroll', Scroll);\r\n  let Datee = () => {\r\n    var d = new Date();\r\n    var n = d.getFullYear();\r\n    setDate(n)\r\n  }\r\n  let Input = (e) => {\r\n    let searchh = e.target.value;\r\n    setSearch(searchh);\r\n  }\r\n  // sessionStorage.setItem('theme', theme);\r\n  let dataa = async () => {\r\n    if (search === \"\") {\r\n      setCheck(true);\r\n      return\r\n    }\r\n    else {\r\n      try {\r\n        let url = `https://api.themoviedb.org/3/search/multi?api_key=32c2f8b05f0301b51959c90b965a06ba&query=${search} &language=en-US&page=1&include_adult=false`;\r\n        let searchdata = await fetch(url);\r\n        let searchdataa = await searchdata.json();\r\n        let data = searchdataa.results.map((curval, index) => ({\r\n          id: curval.id,\r\n          title: curval.title,\r\n          poster: curval.poster_path,\r\n          mediaType: curval.media_type,\r\n          index: index\r\n        }))\r\n        setsearchMovie(data);\r\n        setCheck(false);\r\n        setLoading(false);\r\n      }\r\n      catch (err) {\r\n        alert(`Many Traffic!!! Refresh it ^_^`)\r\n        history.push('/');\r\n      }\r\n    }\r\n  }\r\n  let Searchh = () => {\r\n    setSearch(\"\");\r\n  }\r\n  let Scroll = () => {\r\n    if (window.scrollY >= 150) {\r\n      setShow(false);\r\n    }\r\n    else {\r\n      setShow(true)\r\n    }\r\n  }\r\n  window.addEventListener('scroll', Scroll);\r\n  let Top = () => {\r\n    window.scroll({\r\n      top: 0,\r\n      left: 100,\r\n      behavior: 'smooth',\r\n      transition: '0.5s'\r\n    });\r\n  }\r\n  let Theme = () => {\r\n    if (theme) {\r\n      setTheme(false);\r\n    }\r\n    else {\r\n      setTheme(true);\r\n    }\r\n  }\r\n  // let Scroll = () => {\r\n  //   if (window.scrollY >= 150) {\r\n  //     setShow(true);\r\n  //   }\r\n  //   else {\r\n  //     setShow(false);\r\n  //   }\r\n\r\n  // }\r\n  // window.addEventListener('scroll', Scroll)\r\n  React.useEffect(() => {\r\n    dataa();\r\n  }, [search]);\r\n  React.useEffect(() => {\r\n    Datee();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"container text-center\">\r\n        <p id={theme ? `netflix` : `netflix`} className=\"mt-3{}}\">Welcome ^_^. Millions of Movie || TvShows. Explore Now... </p>\r\n      </div>\r\n      <div className=\"container\">\r\n        <Navbar expand=\"lg\">\r\n          <Navbar.Brand>\r\n            {/* <img\r\n              src={Logo}\r\n              width=\"60\"\r\n              height=\"38\"\r\n              className=\"d-inline-block align-top mt-2\"\r\n              alt=\"React Bootstrap logo\"\r\n            /> */}\r\n            <Link className={theme ? `navbar-brand ml-2 mt-0 text-white` : `navbar-brand ml-2  ml-3 mt-0 text-dark`} exact to=\"/\">Home</Link>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"bg-light\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto text-center\">\r\n              <NavDropdown title=\"TV Shows\" id={theme ? `basic-nav-dropdown` : 'basicc-nav-dropdown'}>\r\n                <Link exact to=\"/populartvshows\" className={`ml-3 mt-2 text-dark`}>Popular</Link><br />\r\n                <NavDropdown.Divider />\r\n                <Link exact to=\"/topratedtvshows\" className={`ml-3 mt-2 text-dark`}>Top Rated</Link>\r\n              </NavDropdown>\r\n              <Link exact to=\"/aboutus\" className={theme ? `ml-3 mt-2 text-white` : `ml-3 mt-2 text-dark`}>About us</Link>\r\n              <p className={theme ? `thme ml-3 mt-2 text-white` : `thme ml-3 mt-2 text-dark`} onClick={Theme}>Theme[{theme ? `Black` : `White`}]</p>\r\n            </Nav>\r\n            <form className=\"form-inline my-2 my-lg-0 ml-auto\">\r\n              <input onChange={Input} value={search} className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search Movies or Tvshows...\" aria-label=\"Search\" />\r\n              {check === false ? (\r\n                <div className=\"list-group\">\r\n                  {\r\n                    searchMovie.length === 0 ? (<p>Data Not Found!!!</p>) :\r\n                      searchMovie.map((curval, index) => {\r\n                        return (\r\n                          loading ? (<Loading />) :\r\n                            <Link onClick={Searchh} exact to={{ pathname: `/${curval.title}/${curval.id}/search`, state: { id: curval.id, media: curval.mediaType } }}><li className=\"list-group-item search bg-white text-info d-block\" key={index}><img id=\"movieposter\" src={`https://image.tmdb.org/t/p/original/${curval.poster}`} />{curval.title ? `${curval.title} || ` : null} Media Type: {curval.mediaType}</li></Link>\r\n                        )\r\n                      })}\r\n                </div>\r\n              ) : null}\r\n            </form>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n      <div className=\"container-fluid\">\r\n        {show ? null : (\r\n          <IoIosArrowDropup onClick={Top} id={theme ? `topp` : 'toppp'} ></IoIosArrowDropup>\r\n        )}\r\n      </div>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Movies}></Route>\r\n        <Route exact path=\"/aboutus\" component={About} />\r\n        {/* <Route exact path=\"/popularmovie\" component={Modal} /> */}\r\n        {/* <Route exact path=\"/search\" component={Search} /> */}\r\n        <Route exact path=\"/:slug/:slug\" component={Trendd} />\r\n        <Route exact path=\"/:slug/:slug/search\" component={Multisearch} />\r\n        <Route exact path=\"/populartvshows\" component={Populartv} />\r\n        <Route exact path=\"/topratedtvshows\" component={Topratedtv} />\r\n        <Route exact path=\"/:slug/:slug/TvShows\" component={Populartvdetail} />\r\n        <Route exact path=\"/:slug/:slug/:slug/seasons\" component={Seasons} />\r\n        <Route component={Error} />\r\n      </Switch>\r\n      <footer className=\"page-footer font-small\">\r\n        <div className=\"footer-copyright text-center py-3 text-white\">© {date} Developed by:\r\n          <img\r\n            src={Logo}\r\n            width=\"60\"\r\n            height=\"38\"\r\n            className=\"d-inline-block align-top\"\r\n            alt=\"React Bootstrap logo\"\r\n          /><a href=\"#\" className=\"text-warning\"> Ashish Thapa</a>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  )\r\n}\r\nexport default Home;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Home from './Home';\nimport Theme from './Theme';\nfunction App() {\n  return (\n    <>\n      <Theme>\n        <Home>\n        </Home>\n      </Theme>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport { BrowserRouter } from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}